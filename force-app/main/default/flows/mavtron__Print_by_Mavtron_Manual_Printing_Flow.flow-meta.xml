<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>55.0</apiVersion>
    <assignments>
        <name>Build_Print_Job_Record</name>
        <label>Build Print Job Record</label>
        <locationX>383</locationX>
        <locationY>686</locationY>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__Device__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DevicePicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__Copies__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Copies</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__ZPLContent__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ZPL_Content</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__URI__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>URL</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__Content_Document_ID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Form_ContentIDs</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__Title__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Job_Title</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>PrintJob.mavtron__Content_Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Content_Type</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_The_Print_Job</targetReference>
        </connector>
    </assignments>
    <description>This flow is used on the print home page to help for a quick way to make your first print.</description>
    <dynamicChoiceSets>
        <name>ContentDocumentList</name>
        <dataType>String</dataType>
        <displayField>Title</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>FileType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PDF</stringValue>
            </value>
        </filters>
        <limit>100</limit>
        <object>ContentDocument</object>
        <outputAssignments>
            <assignToReference>Var_SelectedContentPicklistId</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ContentTypeChoices</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>mavtron__Content_Type__c</picklistField>
        <picklistObject>mavtron__Print_Job__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>DeviceChoices</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <limit>100</limit>
        <object>mavtron__Device__c</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <formulas>
        <name>Form_ContentIDs</name>
        <dataType>String</dataType>
        <expression>{!ContentDocumentID}+{!Var_SelectedContentPicklistId}</expression>
    </formulas>
    <interviewLabel>Print by Mavtron: Manual Printing Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>Print by Mavtron: Manual Printing Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_The_Print_Job</name>
        <label>Create The Print Job</label>
        <locationX>383</locationX>
        <locationY>806</locationY>
        <connector>
            <targetReference>Success</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputReference>PrintJob</inputReference>
    </recordCreates>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>Error</name>
        <label>Error!</label>
        <locationX>647</locationX>
        <locationY>926</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ErrorMessage</name>
            <fieldText>&lt;p&gt;The print job was not successfully created:&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(247, 0, 0);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>No_Devices_Warning</name>
        <label>No Devices Warning</label>
        <locationX>427</locationX>
        <locationY>313</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Select_a_Print_Type</targetReference>
        </connector>
        <fields>
            <name>SetupMessage</name>
            <fieldText>&lt;p&gt;You need to complete the Print by Mavtron set up before you can print your first document. You must enter an API key and schedule the jobs prior to completing your first print.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Select_a_Print_Type</name>
        <label>Print Type</label>
        <locationX>383</locationX>
        <locationY>566</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Build_Print_Job_Record</targetReference>
        </connector>
        <fields>
            <name>Job_Title</name>
            <dataType>String</dataType>
            <defaultValue>
                <stringValue>Sample Test Print At {!$Flow.CurrentDateTime}</stringValue>
            </defaultValue>
            <fieldText>Job Title</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;This is optional but can help to keep track of jobs in print node easier for troubleshooting&lt;/p&gt;</helpText>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Content_Type</name>
            <choiceReferences>ContentTypeChoices</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Content Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;This is the type of content to send: raw_base64 should be used for ZPL Labels, pdf_base64 should be used for PDFs stored in Salesforce, and pdf_uri can be used for PDFs stored outside of Salesforce.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>DevicePicklist</name>
            <choiceReferences>DeviceChoices</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Device</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Copies</name>
            <dataType>Number</dataType>
            <defaultValue>
                <numberValue>1.0</numberValue>
            </defaultValue>
            <fieldText>Copies</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>0</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>URLHelp</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68); font-size: 14px;&quot;&gt;This is the URL used when the content type is PDF URL. This should be a publicly accessible document stored where it can be accessed by a URL a sample test one you can use is below:  &lt;/strong&gt;&lt;a href=&quot;https://api.printnode.com/static/test/pdf/4x6_label_on_8x11_centered_on_letter_paper.pdf&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 8, 255);&quot;&gt;https://api.printnode.com/static/test/pdf/4x6_label_on_8x11_centered_on_letter_paper.pdf&lt;/a&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>pdf_uri</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>URL</name>
            <dataType>String</dataType>
            <fieldText>URL</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;This is the URI used when the content type is pdf_uri. This should be a publicly accessible document stored where it can be accessed by a URL a good example is:  https://api.printnode.com/static/test/pdf/4x6_label_on_8x11_centered_on_letter_paper.pdf&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>pdf_uri</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ContentDocumentHelp</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;To make it easier there are two options, one is a picklist of the last 100 documents uploaded to SF you can select. The other method is to manually put in a valid content document ID of a PDF in salesforce. Once you use one of the methods the other will be hidden.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>pdf_base64</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ContentDocumentIdPicklist</name>
            <choiceReferences>ContentDocumentList</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Easy PDF Content Document ID</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;This picklist will show you the most recent 100 documents that have been uploaded to the org to make it easier to select one. &lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>pdf_base64</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>ContentDocumentID</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ContentDocumentID</name>
            <dataType>String</dataType>
            <fieldText>Manual PDF Content Document ID</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;This is the recordid of a pdf stored in salesforce as a content document. you can get an ID by going onto an object like, Account, uploading a pdf to the account then clicking on it, then copy the recordid that is in the URL it should start with 069&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>pdf_base64</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>ContentDocumentIdPicklist</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ZPLContentHelp</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 14px;&quot;&gt;You can use the below ZPL code as a sample to test. (Just Copy and Paste Everything Below Here)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 8, 255); font-family: Arial, Calibri, Verdana, &amp;quot;Tw Cen MT&amp;quot;; font-size: 14.6667px;&quot;&gt;^XA&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 8, 255); font-family: Arial, Calibri, Verdana, &amp;quot;Tw Cen MT&amp;quot;; font-size: 14.6667px;&quot;&gt;^LH55,30&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 8, 255); font-family: Arial, Calibri, Verdana, &amp;quot;Tw Cen MT&amp;quot;; font-size: 14.6667px;&quot;&gt;^FO20,10^CFD,27,13^FDCompany Name^FS&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 8, 255); font-family: Arial, Calibri, Verdana, &amp;quot;Tw Cen MT&amp;quot;; font-size: 14.6667px;&quot;&gt;^FO20,60^AD^FD&amp;lt;DESCRIPTION &amp;gt;^FS&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 8, 255); font-family: Arial, Calibri, Verdana, &amp;quot;Tw Cen MT&amp;quot;; font-size: 14.6667px;&quot;&gt;^FO40,160^BY2,2.0^BCN,100,Y,N,N,N^FD&amp;lt;PART,-1&amp;gt;^FS&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 8, 255); font-family: Arial, Calibri, Verdana, &amp;quot;Tw Cen MT&amp;quot;; font-size: 14.6667px;&quot;&gt;^XZ&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>raw_base64</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>ZPL_Content</name>
            <fieldText>ZPL Content</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <helpText>&lt;p&gt;This is the ZPL Content to print on a ZPL-enabled printer.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Here is a sample:&lt;/p&gt;&lt;p&gt;XlhBDQpeTEg1NSwzMA0KXkZPMjAsMTBeQ0ZELDI3LDEzXkZEQ29tcGFueS&lt;/p&gt;&lt;p&gt;BOYW1lXkZTDQpeRk8yMCw2MF5BRF5GRDxERVNDUklQVElPTiA+XkZTDQ&lt;/p&gt;&lt;p&gt;peRk80MCwxNjBeQlkyLDIuMF5CQ04sMTAwLFksTixOLE5eRkQ8UEFSVCwt&lt;/p&gt;&lt;p&gt;MT5eRlMNCl5YWg==&lt;/p&gt;</helpText>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Content_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>raw_base64</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Success</name>
        <label>Success!</label>
        <locationX>383</locationX>
        <locationY>926</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>SuccessMessage</name>
            <fieldText>&lt;p&gt;The print job was successfully created! You can view it by clicking &lt;a href=&quot;/{!PrintJob.Id}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>521</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>No_Devices_Warning</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>PrintJob</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>mavtron__Print_Job__c</objectType>
    </variables>
    <variables>
        <name>Var_SelectedContentPicklistId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
