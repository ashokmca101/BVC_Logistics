@isTest
public class QuoteTriggerBVCHelperTest {

     @isTest
    private static void  BathQuoteTest(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;

        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        Bath_Standard_Pricing__c BathCustomPricing =new  Bath_Standard_Pricing__c(Shipment_charge__c=100,Package_Amount__c='50000',Business_Type__c='ACR',Commission_Percentage__c=2,Secure_logistics_rate__c=500);
        insert BathCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='BATH';
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='ACR';
        qT.BVC_Branch__c=hub.Id;
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
    @isTest
    private static void  eShipQuoteTest(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstand2TypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
        eSHIP_Standard_Pricing__c eshipstand2= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600,  Slab_Criteria__c='Gross Weight Gms',RecordTypeId=eshipstand2TypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Business_Type__c='Non ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand2;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        Bath_Standard_Pricing__c BathCustomPricing =new  Bath_Standard_Pricing__c(Shipment_charge__c=100,Package_Amount__c='50000',Business_Type__c='ACR',Commission_Percentage__c=2,Secure_logistics_rate__c=500);
        insert BathCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        opp3.Package_Amount__c='50000';
        opp3.Slab_Criteria__c='Gross Weight Gms';
         opp3.Is_Deal_with_New_Price__c=false;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='ACR';
        qT.BVC_Branch__c=hub.Id;
        qT.Slab_Criteria__c='Gross Weight Gms';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
    
     @isTest
    private static void  eShipQuoteTest1(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstand3TypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
		 eSHIP_Standard_Pricing__c eshipstand3= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600,  Slab_Criteria__c='Invoice Value INR',RecordTypeId=eshipstand3TypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Business_Type__c='Non ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand3;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        Bath_Standard_Pricing__c BathCustomPricing =new  Bath_Standard_Pricing__c(Shipment_charge__c=100,Package_Amount__c='50000',Business_Type__c='ACR',Commission_Percentage__c=2,Secure_logistics_rate__c=500);
        insert BathCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        opp3.Package_Amount__c='50000';
        opp3.Slab_Criteria__c='Invoice Value INR';
         opp3.Is_Deal_with_New_Price__c=false;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='ACR';
        qT.BVC_Branch__c=hub.Id;
        qT.Slab_Criteria__c='Invoice Value INR';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
    
      @isTest
    private static void  eShipQuoteTest2(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstandTypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('New eSHIP Pricing').getRecordTypeId();
		eSHIP_Standard_Pricing__c eshipstand= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600, RecordTypeId=eshipstandTypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Package_Amount__c='50000', Business_Type__c='ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        //String BathCustomPricingTypeID = Schema.SObjectType.Bath_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
        Bath_Standard_Pricing__c BathCustomPricing =new  Bath_Standard_Pricing__c(Shipment_charge__c=100,Package_Amount__c='50000',Business_Type__c='ACR',Commission_Percentage__c=2,Secure_logistics_rate__c=500);
        insert BathCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        opp3.Package_Amount__c='50000';
        //opp3.Slab_Criteria__c='Invoice Value INR';
         opp3.Is_Deal_with_New_Price__c=true;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='ACR';
         qT.Package_Amount__c='50000';
        qT.BVC_Branch__c=hub.Id;
        //qT.Slab_Criteria__c='Invoice Value INR';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
    
      @isTest
    private static void  eShipQuoteTest3(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstand1TypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('New eSHIP Pricing').getRecordTypeId();
		 eSHIP_Standard_Pricing__c eshipstand1= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600, RecordTypeId=eshipstand1TypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Business_Type__c='Non ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand1;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        Bath_Standard_Pricing__c BathCustomPricing =new  Bath_Standard_Pricing__c(Shipment_charge__c=100,Package_Amount__c='50000',Business_Type__c='ACR',Commission_Percentage__c=2,Secure_logistics_rate__c=500);
        insert BathCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        opp3.Package_Amount__c='50000';
        //opp3.Slab_Criteria__c='Invoice Value INR';
         opp3.Is_Deal_with_New_Price__c=true;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='Non ACR';
         qT.Package_Amount__c='50000';
        qT.BVC_Branch__c=hub.Id;
        //qT.Slab_Criteria__c='Invoice Value INR';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
    @isTest
    private static void  eShipQuoteTest4(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstandTypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('New eSHIP Pricing').getRecordTypeId();
		eSHIP_Standard_Pricing__c eshipstand= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600, RecordTypeId=eshipstandTypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Package_Amount__c='50000', Business_Type__c='ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        //String BathCustomPricingTypeID = Schema.SObjectType.Bath_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
        eSHIP_Standard_Pricing__c eshipCustomPricing =new  eSHIP_Standard_Pricing__c(Slab_Criteria__c='Net Weight',Gross_Weight_Unit_for_Additional_Weight__c=100,Additional_Charge__c=500,Business_Type__c='ACR',Fuel_Surcharge__c=2,COD_Charges_per_shipment__c=500,Liability_Charges__c=900,Logistice_Charges__c=899,Weight_Charges__c=78,Rate_INR__c=678,No_Of_Free_Atttemps__c=9);
        insert eshipCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        //opp3.Package_Amount__c='50000';
        opp3.Slab_Criteria__c='Net Weight';
         opp3.Is_Deal_with_New_Price__c=false;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='Non ACR';
         //qT.Package_Amount__c='50000';
        qT.BVC_Branch__c=hub.Id;
        qT.Slab_Criteria__c='Net Weight';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
     @isTest
    private static void  eShipQuoteTest5(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstandTypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('New eSHIP Pricing').getRecordTypeId();
		eSHIP_Standard_Pricing__c eshipstand= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600, RecordTypeId=eshipstandTypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Package_Amount__c='50000', Business_Type__c='ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        //String BathCustomPricingTypeID = Schema.SObjectType.Bath_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
        eSHIP_Standard_Pricing__c eshipCustomPricing =new  eSHIP_Standard_Pricing__c(Slab_Criteria__c='Invoice Value INR',Gross_Weight_Unit_for_Additional_Weight__c=100,Additional_Charge__c=500,Business_Type__c='ACR',Fuel_Surcharge__c=2,COD_Charges_per_shipment__c=500,Liability_Charges__c=900,Logistice_Charges__c=899,Weight_Charges__c=78,Rate_INR__c=678,No_Of_Free_Atttemps__c=9);
        insert eshipCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        //opp3.Package_Amount__c='50000';
        opp3.Slab_Criteria__c='Invoice Value INR';
         opp3.Is_Deal_with_New_Price__c=false;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='Non ACR';
         //qT.Package_Amount__c='50000';
        qT.BVC_Branch__c=hub.Id;
        qT.Slab_Criteria__c='Invoice Value INR';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
         QuoteTriggerBVCHelper.Method2();
    }
    @isTest
    private static void  eShipQuoteTest6(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstandTypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('New eSHIP Pricing').getRecordTypeId();
		eSHIP_Standard_Pricing__c eshipstand= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600, RecordTypeId=eshipstandTypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Package_Amount__c='50000', Business_Type__c='ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        //String BathCustomPricingTypeID = Schema.SObjectType.Bath_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
        eSHIP_Standard_Pricing__c eshipCustomPricing =new  eSHIP_Standard_Pricing__c(Slab_Criteria__c='Gross Weight Gms',Gross_Weight_Unit_for_Additional_Weight__c=100,Additional_Charge__c=500,Business_Type__c='ACR',Fuel_Surcharge__c=2,COD_Charges_per_shipment__c=500,Liability_Charges__c=900,Logistice_Charges__c=899,Weight_Charges__c=78,Rate_INR__c=678,No_Of_Free_Atttemps__c=9);
        insert eshipCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        //opp3.Package_Amount__c='50000';
        opp3.Slab_Criteria__c='Gross Weight Gms';
         opp3.Is_Deal_with_New_Price__c=false;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='Non ACR';
         //qT.Package_Amount__c='50000';
        qT.BVC_Branch__c=hub.Id;
        qT.Slab_Criteria__c='Gross Weight Gms';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
    }
     @isTest
    private static void  eShipQuoteTest7(){
        
        Pricebook2 standardPricebook = new Pricebook2(Id = Test.getStandardPricebookId(),IsActive = true);
        update standardPricebook;
        Pricebook2 BVCPricebook = new Pricebook2(name='BVC INR Price Book',IsActive = true);
       	insert BVCPricebook;
        String eshipstandTypeID = Schema.SObjectType.eSHIP_Standard_Pricing__c.getRecordTypeInfosByName().get('New eSHIP Pricing').getRecordTypeId();
		eSHIP_Standard_Pricing__c eshipstand= new eSHIP_Standard_Pricing__c(Gross_Weight_Unit_for_Additional_Weight__c=600, RecordTypeId=eshipstandTypeID,Weight_Covered_Gms__c=700,Weight_Charges__c=900, Logistice_Charges__c=2, Liability_Charges__c=1, Package_Amount__c='50000', Business_Type__c='ACR',Lower_Bound__c=31,Upper_Bound__c=100,Shipment_Type__c='Intracity' );
        insert eshipstand;
        list<Product2> prodList = new list<Product2>();
       	Product2 prodBATh = new Product2(Name = 'BATH freight Charge',Family = 'BATH freight Charge',ProductCode='BVC BATH2');
        Product2 prodESHIP = new Product2(Name = 'Eship freight Charge',Family = 'Eship freight Charge',ProductCode='BVC eSHIP2');
        Product2 prodiVALSHIP = new Product2(Name = 'BVC iValSHIP',Family = 'BVC iValSHIP',ProductCode='BVC iValSHIP');
        Product2 prodiEVALSHIP = new Product2(Name = 'BVC ieSHIP',Family = 'BVC ieSHIP',ProductCode='BVC ieSHIP');
        Product2 prodExibiSHIP = new Product2(Name = 'BVC ExhibiSHIP',Family = 'BVC ExhibiSHIP',ProductCode='BVC ExhibiSHIP');
        prodList.add(prodBATh);
        prodList.add(prodESHIP);
        prodList.add(prodiVALSHIP);
        prodList.add(prodiEVALSHIP);
        prodList.add(prodExibiSHIP);
        insert prodList;
        list<PricebookEntry> PBentry = new list<PricebookEntry>();
        PricebookEntry standardPrice1 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice2 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice3 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice4 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry standardPrice5 = new PricebookEntry(Pricebook2Id = standardPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice1 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodBATh.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice2 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodESHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice3 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice4 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodiEVALSHIP.Id,UnitPrice = 0, IsActive = true);
        PricebookEntry BVCPrice5 = new PricebookEntry(Pricebook2Id = BVCPricebook.id, Product2Id = prodExibiSHIP.Id,UnitPrice = 0, IsActive = true);
        PBentry.add(standardPrice1);
        PBentry.add(standardPrice2);
        PBentry.add(standardPrice3);
        PBentry.add(standardPrice4);
        PBentry.add(standardPrice5);
        PBentry.add(BVCPrice1);
        PBentry.add(BVCPrice2);
        PBentry.add(BVCPrice3);
        PBentry.add(BVCPrice4);
        PBentry.add(BVCPrice5);
        insert PBentry;
        String Uid = UserInfo.getUserId();
        Hub__c hub = new  Hub__c(Name='Test',Branch__c='MUMBAI',Sales_person__c=Uid);
        insert hub;
        Account acc= new Account();
        acc.Name='Test';
        acc.Last_Name__c='Test';
        acc.RecordTypeId='0125g0000002XavAAE';
        acc.PAN_Number_of_Entity__c='546gtyhu78';
        insert acc;
        Hub__c newHub = new Hub__c();
        newHub.Name='new Delhi';
        newHub.Branch__c='AGRA';
        insert newHub;
        
        Zone__c newZone = new Zone__c();
        newZone.Name='data Zone';
        insert newZone;
        Active_Pincode__c newActivePinCode = new Active_Pincode__c();
        newActivePinCode.Pincodes__c='43785';
        newActivePinCode.City__c='Agra';
        newActivePinCode.Country__c='India';
        newActivePinCode.State__c='Delhi';
        newActivePinCode.Hub__c=newHub.ID;
        newActivePinCode.Zone__c=newZone.Id;
        insert newActivePinCode;
        AddressBook__c BillingAdd = new AddressBook__c();
        BillingAdd.RecordTypeId='0125g0000002Xb0AAE';
        BillingAdd.Customer__c=acc.Id;
        BillingAdd.Your_Address_Identifier__c='shivaji Ward';
        BillingAdd.ADDRESS1__c='shivaji ward Ghatanji';
        BillingAdd.TRADE_NAME__c='TEST';
        BillingAdd.Active_Pincode__c=newActivePinCode.Id;
        insert BillingAdd;
        //String BathCustomPricingTypeID = Schema.SObjectType.Bath_Standard_Pricing__c.getRecordTypeInfosByName().get('Legacy eSHIP Pricing').getRecordTypeId();
        eSHIP_Standard_Pricing__c eshipCustomPricing =new  eSHIP_Standard_Pricing__c(Slab_Criteria__c='Gross Weight Gms',Gross_Weight_Unit_for_Additional_Weight__c=100,Additional_Charge__c=500,Business_Type__c='ACR',Fuel_Surcharge__c=2,COD_Charges_per_shipment__c=500,Liability_Charges__c=900,Logistice_Charges__c=899,Weight_Charges__c=78,Rate_INR__c=678,No_Of_Free_Atttemps__c=9);
        insert eshipCustomPricing;
        acc.Billing_Address__c=BillingAdd.Id;
        acc.Primary_Address__c=BillingAdd.Id;
        acc.Is_Finance_Contact_Present__c=true;
        acc.KYC_Status__c='API Verified';
        acc.Name_As_Per_PAN_Manual_Input__c='TESTKYC';
        //acc.Name_As_Per_PAN__pc='TESTKYC';
        acc.KARZAA_Name_As_Per_PAN__c='TESTKYC';
        acc.Trade_Name__c='TESTKYC';
        update acc;
        
         Opportunity opp3=new Opportunity();
         Account acc2= new Account();
        opp3.BVC_Product__c =prodESHIP.id;
        opp3.Name = 'test1';
        opp3.AccountId = acc.Id;
        opp3.CloseDate = System.today();
        opp3.StageName = 'Inbound Lead';
        opp3.Business_Type__c='Non ACR';
        opp3.Tariff_Plan__c='Custom';
        //opp3.Package_Amount__c='50000';
        opp3.Slab_Criteria__c='Gross Weight Gms';
         opp3.Is_Deal_with_New_Price__c=false;
        insert opp3;
        SBQQ__Quote__c qT= new SBQQ__Quote__c();
        qT.SBQQ__Account__c=acc.Id;
        qT.BVC_Service__c='eSHIP';
        qt.SBQQ__Opportunity2__c=opp3.id;
        qT.Tariff_Plan_Bath_Eship__c='Standard';
        qT.Business_Type__c='Non ACR';
         //qT.Package_Amount__c='50000';
        qT.BVC_Branch__c=hub.Id;
        qT.Slab_Criteria__c='Gross Weight Gms';
        insert qT;
        qT.SBQQ__Status__c='Contract Signed';
        update qt;
        list<SBQQ__Quote__c> qtList = new list<SBQQ__Quote__c>();
        qtList.add(qt);
        Shipment__c Shipment = new Shipment__c();
        Shipment.Customer__c=acc.ID;
        shipment.Is_Uploaded__c=false;
        shipment.Customer_Product_Category__c='eSHIP';
        QuoteTriggerBVCHelper.insertRecord(qtList);
    }
}