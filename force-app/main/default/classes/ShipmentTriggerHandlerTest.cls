@isTest
public class ShipmentTriggerHandlerTest {
    Static TestMethod Void ShipmentTriggerHandlerTestMethod(){
        Id communityRecrodTypeId = Schema.SObjectType.Shipment__c.getRecordTypeInfosByName().get('Community Shipment').getRecordTypeId();
        Id operationRecrodTypeId = Schema.SObjectType.Shipment__c.getRecordTypeInfosByName().get('Operations Shipment').getRecordTypeId();
        Account Acc = New Account();
        Acc.Name = 'abcxyz';
        Acc.BVC_Company_Type__c = 'Domestic';
        Acc.Customer_Status__c = 'Active';
        Acc.Category__c = 'Manufacturer';
        Acc.Type_Of_Customer__c = 'Both';
        Acc.BVC_Legal_Entity__c = 'B.V.C. Logistics Private Limited';
        Acc.Primary_Customer_Email__c = 'abc@sdcn.com';
        Acc.PAN_Number_of_Entity__c = 'EQUPNB123K';
        Acc.RecordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Billing').getRecordTypeId();
        Insert Acc;
        AddressBook__c TestAdd = New AddressBook__c();
        TestAdd.Name = 'TestAddress';
        TestAdd.GSTIN__c = '';
        TestAdd.TRADE_NAME__c = Acc.Name;
        TestAdd.Customer__c = Acc.Id;
        TestAdd.Source__c = 'Manual';
        TestAdd.GSTIN_Type__c = 'GSN-Individual IEC';
        TestAdd.ADDRESS1__c = 'ABC Street';
        //TestAdd.CITY__c = 'Test City';
        TestAdd.STATE__c = 'Test State';
        TestAdd.COUNTRY__c = 'Test Country';
        TestAdd.PINCODE__c = '123456';
        Insert TestAdd;
        Pickup__c TestPick = New Pickup__c();
        TestPick.Pickup_Date__c = System.Today();
        TestPick.Customer__c = Acc.Id;
        //TestPick.Shipper_Name__c = Acc.Id;
        TestPick.Origin_Address_Name__c = TestAdd.Id;
        TestPick.Destination_Address_Name__c = TestAdd.Id;
        //TestPick.Name = 'TestPickup';
        Insert TestPick;
        Shipment_Lot__c ShipLot1 = New Shipment_Lot__c();
        ShipLot1.Name = 'TestLot';
        Insert ShipLot1;
        Product__c prodObj = new Product__c();
        prodObj.Name = 'ivalSHIP';
        insert prodObj;
        Product2 prod2Obj = new Product2();
        prod2Obj.Name = 'ivalSHIP';
        insert prod2Obj;
        Active_Pincode__c pincode = new Active_Pincode__c();
        //pincode.City__c = 'Amravati';
        pincode.Pincodes__c = '444603';
        pincode.Country__c = 'India';
        pincode.State__c = 'Maha';
        insert pincode;
        Active_Pincode__c pincodevar = new Active_Pincode__c();
       // pincodevar.City__c = 'Delhi';
        pincodevar.Pincodes__c = '110001';
        pincodevar.Country__c = 'India';
        pincodevar.State__c = 'Delhi';
        insert pincodevar;
        List<Shipment__c> ShipList1 = New List<Shipment__C>();
        List<Shipment__c> ShipList2 = New List<Shipment__C>();
        List<Shipment__c> ShipList3 = New List<Shipment__C>();
        Shipment__c Ship = New Shipment__c();
        //Ship.Name = 'TestShipment';
        Ship.Pickup__c = TestPick.Id;
        Ship.Bill_To_GSTIN__c = 'ABCD123L';
        Ship.Bill_To_Party_Address__c = 'Test Address';
        Ship.Bill_To_Party_PAN__c = 'ABCD1234M';
        Ship.Billing_Entity_Name__c = Acc.Name;
        Ship.Customer__c = Acc.Id;
        Ship.Short_URL__c = 'abc123@xyz.com';
        Ship.Invoice_Calculated_Amount__c = 123;
        Ship.Total_Charge__c = 3456;
        Ship.Total_Invoice_Value__c = 876;
        Ship.Shipper_Email_ID__c = 'abc@sdcn.com';
        Ship.Shipper__c = 'abcxyz';
        Ship.Consignee_Name__c = 'abcxyz';
        Ship.Consignee_Email_ID__c = 'abc@sdcn.com';
        Ship.Bill_To_Party_PAN__c = 'EQUPNB123K';
        Ship.Shipment_Lot__c = ShipLot1.Id;
        Ship.Origin_Pincode__c = '444603';
        Ship.Destination_Pincode__c = '110001';
        Ship.Product_Name__c = prodObj.Id;
        Ship.Gross_Weight__c = 123;
        Ship.BVC_Products__c ='Import';
        ship.Bill_to_1__c = 'Shipper';
        ship.RecordTypeId = operationRecrodTypeId;
        ship.Consignee_Name_TMS__c = Acc.Id;
        //    ship.Origin_Address_Name__c = testAdd.name;
        ship.Destination_Address_Name__c = TestAdd.Id;
        insert Ship;
        ShipList1.add(Ship);
        ShipList3.add(Ship);
        Shipment__c Ship2 = New Shipment__c();
        //Ship2.Name = 'TestShipment';
        ship.Bill_to_1__c = 'Consignee';
        Ship2.Pickup__c = TestPick.Id;
        Ship2.Bill_To_GSTIN__c = 'ABCD123L';
        Ship2.Bill_To_Party_Address__c = 'Test Address';
        Ship2.Bill_To_Party_PAN__c = 'ABCD1234M';
        Ship2.Billing_Entity_Name__c = Acc.Name;
        Ship2.Customer__c = Acc.Id;
        Ship2.Short_URL__c = 'abc123@xyz.com';
        Ship2.Invoice_Calculated_Amount__c = 123;
        Ship2.Total_Charge__c = 3456;
        Ship2.Total_Invoice_Value__c = 876;
        Ship2.Shipper_Email_ID__c = 'abc@sdcn.com';
        Ship2.Shipper__c = 'abc';
        Ship2.Consignee_Email_ID__c = 'abc@sd.com';
        Ship2.Consignee_Name__c = 'abc';
        Ship2.Bill_To_Party_PAN__c = 'EQUPNB123K';
        Ship2.Shipment_Lot__c = ShipLot1.Id;
        Ship2.Consignee_Name_TMS__c = Acc.Id;
        //    ship.Origin_Address_Name__c = testAdd.name;
        Ship2.Destination_Address_Name__c = TestAdd.Id;
        insert Ship2;        
        ShipList1.add(Ship2);
        Shipment__c Ship3 = New Shipment__c();
        //Ship3.Name = 'TestShipment';
        Ship3.Pickup__c = TestPick.Id;
        Ship3.Bill_To_GSTIN__c = 'ABCD123L';
        Ship3.Bill_To_Party_Address__c = 'Test Address';
        Ship3.Bill_To_Party_PAN__c = 'ABCD1234M';
        Ship3.Billing_Entity_Name__c = Acc.Name;
        Ship3.Customer__c = Acc.Id;
        Ship3.Invoice_Calculated_Amount__c = 123;
        Ship3.Total_Charge__c = 3456;
        Ship3.Total_Invoice_Value__c = 876;
        Ship3.Shipper_Email_ID__c = 'abc@sd.com';
        Ship3.Shipper__c = 'abc';
        Ship3.Shipment_Lot__c = ShipLot1.Id;
        Ship3.Consignee_Name_TMS__c = Acc.Id;
        //    ship.Origin_Address_Name__c = testAdd.name;
        Ship3.Destination_Address_Name__c = TestAdd.Id;
        insert Ship3; 
        ShipList2.add(Ship3);
        //ShipmentTriggerHandler.UpdateShipmentShipper(ShipList1);
        //ShipmentTriggerHandler.UpdateShipmentShipper(ShipList2);
        //hipmentTriggerHandler.UpdateShipmentConsignee(ShipList1);
        //ShipmentTriggerHandler.UpdateShipmentConsignee(ShipList2);
        //ShipmentTriggerHandler.updateShipmentBillTo(ShipList1);
        ShipmentTriggerHandler.updateShipmentLotCheckbox(ShipList1);
        ShipmentTriggerHandler.setPayer(ShipList1);
        
    }
}