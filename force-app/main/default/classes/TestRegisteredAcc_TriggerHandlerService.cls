@isTest
public class TestRegisteredAcc_TriggerHandlerService {
    Static TestMethod Void RegisteredAcc_TriggerHandlerServiceCtrlTest(){
        Test.startTest();
        Id AccountBillingId =  Schema.SObjectType.Account.getRecordTypeInfosByName().get('Billing').getRecordTypeId();
        					  
        /*Account ParentAcc = New Account();
        ParentAcc.Name = 'ParentAccount';
        ParentAcc.BVC_Company_Type__c = 'Domestic';
        ParentAcc.Customer_Status__c = 'Active';
        ParentAcc.Category__c = 'Manufacturer';
        ParentAcc.Type_Of_Customer__c = 'Both';
        ParentAcc.BVC_Legal_Entity__c = 'B.V.C. Logistics Private Limited';
        ParentAcc.RecordTypeId = AccountBillingId;
        Insert ParentAcc;
        System.Debug('TestClassParentClass' + ParentAcc.Id);*/
        Account testAccts1 = New Account();
        //testAccts1.ParentId = ParentAcc.Id;
        testAccts1.Name = 'TestAccount1';
        testAccts1.BVC_Company_Type__c = 'Domestic';
        testAccts1.Customer_Status__c = 'Active';
        testAccts1.Category__c = 'Manufacturer';
        testAccts1.Type_Of_Customer__c = 'Both';
        testAccts1.BVC_Legal_Entity__c = 'B.V.C. Logistics Private Limited';
        testAccts1.RecordTypeId = AccountBillingId;
        insert testAccts1;
        System.Debug('TestClassAccount1' + testAccts1.Id);
        Account testAccts2 = New Account();
        //testAccts2.ParentId = ParentAcc.Id;
        testAccts2.Name = 'TestAccount2';
        testAccts2.BVC_Company_Type__c = 'Domestic';
        testAccts2.Customer_Status__c = 'Active';
        testAccts2.Category__c = 'Manufacturer';
        testAccts2.Type_Of_Customer__c = 'Both';
        testAccts2.BVC_Legal_Entity__c = 'B.V. Chinai & Co. (India) Private Limited';
        testAccts1.RecordTypeId = AccountBillingId;
        insert testAccts2;
        System.Debug('TestClassAccount2' + testAccts2.Id);
        Account testAccts1child = New Account();
        testAccts1child.ParentId = testAccts1.Id;
        testAccts1child.Name = 'TestAccount1child';
        testAccts1child.BVC_Company_Type__c = 'Domestic';
        testAccts1child.Customer_Status__c = 'Active';
        testAccts1child.Category__c = 'Manufacturer';
        testAccts1child.Type_Of_Customer__c = 'Both';
        testAccts1child.BVC_Legal_Entity__c = 'B.V.C. Logistics Private Limited';
        testAccts1child.RecordTypeId = AccountBillingId;
        Insert testAccts1child;
        
        Account testAccts2child = New Account();
        testAccts2child.ParentId = testAccts2.Id;
        testAccts2child.Name = 'TestAccount2child';
        testAccts2child.BVC_Company_Type__c = 'Domestic';
        testAccts2child.Customer_Status__c = 'Active';
        testAccts2child.Category__c = 'Manufacturer';
        testAccts2child.Type_Of_Customer__c = 'Both';
        testAccts2child.BVC_Legal_Entity__c = 'B.V.C. Logistics Private Limited';
        testAccts2child.RecordTypeId = AccountBillingId;
        Insert testAccts2child;
        Id BillingId = Schema.SObjectType.AddressBook__c.getRecordTypeInfosByName().get('Billing').getRecordTypeId();
        Id ShippingId = Schema.SObjectType.AddressBook__c.getRecordTypeInfosByName().get('Shipping').getRecordTypeId();        
        AddressBook__c ab=new AddressBook__c();
            ab.name='demo';
            ab.ADDRESS1__c='Address1';
            ab.ADDRESS2__c='Address2';
            ab.CITY__c='city';
            ab.COUNTRY__c='India';
            ab.Customer__c=testAccts1.id;
            ab.PINCODE__c='854105';
            ab.District__c='district';
            ab.TRADE_NAME__c=testAccts1.name;
            //ab.GSTIN__c='UNREGISTERRED12';
            ab.Is_Billing_Address__c=true;
        	ab.RecordTypeId = BillingId;
        	ab.GSTIN__c = '';
        insert ab;
        System.Debug('Address1 Id' + ab.Id);
        AddressBook__c ab1=new AddressBook__c();
            ab1.name='demo';
            ab1.ADDRESS1__c='Addressline1';
            ab1.ADDRESS2__c='Addressline2';
            ab1.CITY__c='city2';
            ab1.COUNTRY__c='India';
            ab1.Customer__c=testAccts2.id;
            ab1.PINCODE__c='854104';
            ab1.District__c='district2';
            ab1.TRADE_NAME__c=testAccts2.name;
            ab1.GSTIN__c='';
        	ab1.RecordTypeId = ShippingId;
            ab1.Is_Billing_Address__c=false;
        insert ab1;
        System.Debug('Address2 Id' + ab1.Id);
        List<Registered_Account__c> RegAccList1 = New List<Registered_Account__c>();
        List<Registered_Account__c> RegAccList2 = New List<Registered_Account__c>();
        Registered_Account__c RegAcc1 = New Registered_Account__c();
        //RegAcc1.Name = 'TestRegAccount1';
        RegAcc1.AWS_Sync_Status__c = 'Pending';
        RegAcc1.BVC_Legal_Entity__c = 'B.V. Chinai & Co. (India) Private Limited';
        RegAcc1.BVC_Software_Id__c = 'MERCURY - A1';
        RegAcc1.Customer__c = testAccts1.Id;
        RegAccList1.Add(RegAcc1);   
        Registered_Account__c RegAcc2 = New Registered_Account__c();
        //RegAcc2.Name = 'TestRegAccount2';
        RegAcc2.AWS_Sync_Status__c = 'Pending';
        RegAcc2.BVC_Legal_Entity__c = 'B.V.C. Logistics Private Limited';
        RegAcc2.BVC_Software_Id__c = 'MERCURY - A1';
        RegAcc2.Customer__c = testAccts2.Id;
        RegAccList1.Add(RegAcc2); 
        Registered_Account__c RegAcc3 = New Registered_Account__c();
        //RegAcc3.Name = 'TestRegAccount3';
        RegAcc3.AWS_Sync_Status__c = 'Pending';
        RegAcc3.BVC_Legal_Entity__c = 'B.V.C. Brinks Private Limited';
        RegAcc3.BVC_Software_Id__c = 'MERCURY - A1';
        RegAcc3.Customer__c = testAccts1.Id;
        RegAccList2.Add(RegAcc3);   
        Registered_Account__c RegAcc4 = New Registered_Account__c();
        //RegAcc4.Name = 'TestRegAccount2';
        RegAcc4.AWS_Sync_Status__c = 'Pending';
        RegAcc4.BVC_Legal_Entity__c = 'B.V.C. Trade Private Limited';
        RegAcc4.BVC_Software_Id__c = 'MERCURY - A1';
        RegAcc4.Customer__c = testAccts2.Id;
        RegAccList2.Add(RegAcc4); 
        Insert RegAccList1;
        Insert RegAccList2;
        RegisteredAcc_TriggerHandlerServiceCtrl.createBVCPickupAddressMapping(RegAccList1);
        RegisteredAcc_TriggerHandlerServiceCtrl.createPICKUPADDRESSMAPPING(RegAccList2);
        Test.stopTest();
    }
}